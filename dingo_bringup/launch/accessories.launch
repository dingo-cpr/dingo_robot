<!--
Launch driver components of Dingo's supported accessories.

Be careful that the defaults in this file are kept aligned with those
in the URDF. See dingo_description/urdf/accessories.urdf.xacro.
-->
<launch>
  <!--
    Primary LMS1xx-series LIDAR, typically front-facing.
    By default this is a SICK LMS1xx but can be changed with the
    DINGO_LASER_MODEL environment variable. Valid model designations are:
    - lms1xx (default) :: SICK LMS1xx
    - ust10            :: Hokuyo UST10
  -->
  <group if="$(optenv DINGO_LASER 0)">
    <arg name="lidar_model" value="$(optenv DINGO_LASER_MODEL lms1xx)" />

    <!-- LMS1xx node -->
    <group if="$(eval arg('lidar_model') == 'lms1xx')">
      <node pkg="lms1xx" name="lms1xx" type="LMS1xx_node">
        <param name="host" value="$(optenv DINGO_LASER_HOST 192.168.131.20)" />
        <param name="frame_id" value="$(optenv DINGO_LASER_MOUNT front)_laser" />
        <remap from="scan" to="$(optenv DINGO_LASER_TOPIC front/scan)" />
      </node>
    </group>

    <!-- UST10 node -->
    <group if="$(eval arg('lidar_model') == 'ust10')">
      <node pkg="urg_node" name="hokuyo" type="urg_node">
        <param name="ip_address" value="$(optenv DINGO_LASER_HOST 192.168.131.20)" />
        <param name="frame_id" value="$(optenv DINGO_LASER_MOUNT front)_laser" />
        <remap from="scan" to="$(optenv DINGO_LASER_TOPIC front/scan)" />
      </node>
    </group>
  </group>

  <!--
    Secondary 2D laser
    Same config options as above, but with "_SECONDARY" in all env vars
  -->
  <group if="$(optenv DINGO_LASER_SECONDARY 0)">
    <arg name="lidar2_model" value="$(optenv DINGO_LASER_SECONDARY_MODEL lms1xx)" />

    <!-- LMS1xx node -->
    <group if="$(eval arg('lidar2_model') == 'lms1xx')">
      <node pkg="lms1xx" name="lms1xx_secondary" type="LMS1xx_node">
        <param name="host" value="$(optenv DINGO_LASER_SECONDARY_HOST 192.168.131.21)" />
        <param name="frame_id" value="$(optenv DINGO_LASER_SECONDARY_MOUNT rear)_laser" />
        <remap from="scan" to="$(optenv DINGO_LASER_SECONDARY_TOPIC rear/scan)" />
      </node>
    </group>

    <!-- UST10 node -->
    <group if="$(eval arg('lidar2_model') == 'ust10')">
      <node pkg="urg_node" name="hokuyo_secondary" type="urg_node">
        <param name="ip_address" value="$(optenv DINGO_LASER_SECONDARY_HOST 192.168.131.21)" />
        <param name="frame_id" value="$(optenv DINGO_LASER_SECONDARY_MOUNT rear)_laser" />
        <remap from="scan" to="$(optenv DINGO_LASER_SECONDARY_TOPIC rear/scan)" />
      </node>
    </group>
  </group>

  <!--
    Primary 3D laser
    By default this is a Velodyne VLP16 but can be changed with the
    DINGO_LASER_3D_MODEL environment variable. Valid model designations are:
    - vlp16 (default)     :: Velodyne VLP-16
    - hdl32e              :: Velodyne HDL32E
  -->
  <group if="$(optenv DINGO_LASER_3D 0)">
    <arg name="lidar_3d_model" value="$(optenv DINGO_LASER_3D_MODEL vlp16)" />
    <!-- VLP16 -->
    <group if="$(eval arg('lidar_3d_model') == 'vlp16')">
      <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch">
        <arg name="device_ip" value="$(optenv DINGO_LASER_3D_HOST 192.168.131.20)" />
        <remap from="velodyne_points" to="$(optenv DINGO_LASER_3D_TOPIC front/points)" />
      </include>
    </group>
    <!-- HDL32E -->
    <group if="$(eval arg('lidar_3d_model') == 'hdl32e')">
      <include file="$(find velodyne_pointcloud)/launch/32e_points.launch">
        <arg name="device_ip" value="$(optenv DINGO_LASER_3D_HOST 192.168.131.20)" />
        <remap from="velodyne_points" to="$(optenv DINGO_LASER_3D_TOPIC front/points)" />
      </include>
    </group>
  </group>

  <!--
    Primary Intel RealSense family camera.  By default this is a D435, but can be changed with the
    DINGO_REALSENSE_MODEL environment variable. Valid model designations are:
    - d435 (default)
    - d435i
    - d415
    - d455
    - l515
  -->
  <arg name="initial_reset"     default="false"/>
  <arg name="reconnect_timeout" default="6.0"/>
  <!-- Primary -->
  <arg name="realsense_enable"                        default="$(optenv DINGO_REALSENSE 0)"/>
  <arg name="realsense_serial"                        default="$(optenv DINGO_REALSENSE_SERIAL 0)"/> <!-- Serial No. -->
  <arg name="realsense_topic"                         default="$(optenv DINGO_REALSENSE_TOPIC realsense)"/> <!-- Namespace -->
  <arg name="realsense_pointcloud_enabled"            default="$(optenv DINGO_REALSENSE_POINTCLOUD_ENABLED 1)"/>
  <arg name="realsense_filters"                       default="$(eval 'pointcloud' if arg('realsense_pointcloud_enabled') else '')"/>
  <arg name="realsense_depth_enabled"                 default="$(optenv DINGO_REALSENSE_DEPTH_ENABLED 1)"/>
  <arg name="realsense_depth_frames"                  default="$(optenv DINGO_REALSENSE_DEPTH_FRAMERATE 30)"/>
  <arg name="realsense_depth_height"                  default="$(optenv DINGO_REALSENSE_DEPTH_HEIGHT 480)"/>
  <arg name="realsense_depth_width"                   default="$(optenv DINGO_REALSENSE_DEPTH_WIDTH 640)"/>
  <arg name="realsense_color_enabled"                 default="$(optenv DINGO_REALSENSE_COLOR_ENABLED true)"/>
  <arg name="realsense_color_frames"                  default="$(optenv DINGO_REALSENSE_COLOR_FRAMERATE 30)"/>
  <arg name="realsense_color_height"                  default="$(optenv DINGO_REALSENSE_COLOR_HEIGHT 480)"/>
  <arg name="realsense_color_width"                   default="$(optenv DINGO_REALSENSE_COLOR_WIDTH 640)"/>
  <arg name="realsense_tf_prefix"                     default="$(optenv DINGO_REALSENSE_PREFIX camera)"/>

  <!-- Secondary -->
  <arg name="realsense_secondary_enable"              default="$(optenv DINGO_REALSENSE_SECONDARY 0)"/>
  <arg name="realsense_secondary_serial"              default="$(optenv DINGO_REALSENSE_SECONDARY_SERIAL 0)"/> <!-- Serial No. -->
  <arg name="realsense_secondary_topic"               default="$(optenv DINGO_REALSENSE_SECONDARY_TOPIC realsense_secondary)"/> <!-- Namespace -->
  <arg name="realsense_secondary_pointcloud_enabled"  default="$(optenv DINGO_REALSENSE_SECONDARY_POINTCLOUD_ENABLED 1)"/>
  <arg name="realsense_secondary_filters"             default="$(eval 'pointcloud' if arg('realsense_secondary_pointcloud_enabled') else '')"/>
  <arg name="realsense_secondary_depth_enabled"       default="$(optenv DINGO_REALSENSE_SECONDARY_DEPTH_ENABLED 1)"/>
  <arg name="realsense_secondary_depth_frames"        default="$(optenv DINGO_REALSENSE_SECONDARY_DEPTH_FRAMERATE 30)"/>
  <arg name="realsense_secondary_depth_height"        default="$(optenv DINGO_REALSENSE_SECONDARY_DEPTH_HEIGHT 480)"/>
  <arg name="realsense_secondary_depth_width"         default="$(optenv DINGO_REALSENSE_SECONDARY_DEPTH_WIDTH 640)"/>
  <arg name="realsense_secondary_color_enabled"       default="$(optenv DINGO_REALSENSE_SECONDARY_COLOR_ENABLED true)"/>
  <arg name="realsense_secondary_color_frames"        default="$(optenv DINGO_REALSENSE_SECONDARY_COLOR_FRAMERATE 30)"/>
  <arg name="realsense_secondary_color_height"        default="$(optenv DINGO_REALSENSE_SECONDARY_COLOR_HEIGHT 480)"/>
  <arg name="realsense_secondary_color_width"         default="$(optenv DINGO_REALSENSE_SECONDARY_COLOR_WIDTH 640)"/>
  <arg name="realsense_secondary_tf_prefix"           default="$(optenv DINGO_REALSENSE_SECONDARY_PREFIX secondary_camera)"/>

  <!-- Primary Launch -->
  <group if="$(arg realsense_enable)" ns="$(arg realsense_topic)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="serial_no"             value="$(arg realsense_serial)"/>
      <arg name="tf_prefix"             value="$(arg realsense_tf_prefix)"/>
      <arg name="initial_reset"         value="$(arg realsense_initial_reset)"/>
      <arg name="reconnect_timeout"     value="$(arg realsense_reconnect_timeout)"/>
      <!-- color -->
      <arg name="enable_color"          value="$(arg realsense_color_enabled)"/>
      <arg name="color_width"           value="$(arg realsense_color_width)"/>
      <arg name="color_height"          value="$(arg realsense_color_height)"/>
      <arg name="color_fps"             value="$(arg realsense_color_frames)"/>
      <!-- depth -->
      <arg name="enable_depth"          value="$(arg realsense_depth_enabled)"/>
      <arg name="depth_width"           value="$(arg realsense_depth_width)"/>
      <arg name="depth_height"          value="$(arg realsense_depth_height)"/>
      <arg name="depth_fps"             value="$(arg realsense_depth_frames)"/>
      <!-- pointcloud -->
      <arg name="filters"               value="$(arg realsense_filters)"/>
    </include>
  </group>

  <!-- Secondary Launch -->
  <group if="$(arg realsense_secondary_enable)" ns="$(arg realsense_secondary_topic)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="serial_no"             value="$(arg realsense_secondary_serial)"/>
      <arg name="tf_prefix"             value="$(arg realsense_secondary_tf_prefix)"/>
      <arg name="initial_reset"         value="$(arg realsense_initial_reset)"/>
      <arg name="reconnect_timeout"     value="$(arg realsense_reconnect_timeout)"/>
      <!-- color -->
      <arg name="enable_color"          value="$(arg realsense_secondary_color_enabled)"/>
      <arg name="color_width"           value="$(arg realsense_secondary_color_width)"/>
      <arg name="color_height"          value="$(arg realsense_secondary_color_height)"/>
      <arg name="color_fps"             value="$(arg realsense_secondary_color_frames)"/>
      <!-- depth -->
      <arg name="enable_depth"          value="$(arg realsense_secondary_depth_enabled)"/>
      <arg name="depth_width"           value="$(arg realsense_secondary_depth_width)"/>
      <arg name="depth_height"          value="$(arg realsense_secondary_depth_height)"/>
      <arg name="depth_fps"             value="$(arg realsense_secondary_depth_frames)"/>
      <!-- pointcloud -->
      <arg name="filters"               value="$(arg realsense_secondary_filters)"/>
    </include>
  </group>

  <!-- 
    FLIR BlackflyS
  -->
  <arg name="blackfly_enable" default="$(optenv DINGO_BLACKFLY 0)"/>
  <arg name="blackfly_prefix" default="$(optenv DINGO_BLACKFLY_PREFIX blackfly)"/>
  <arg name="blackfly_serial" default="$(optenv DINGO_BLACKFLY_SERIAL 0)"/>
  <arg name="blackfly_device" default="$(optenv DINGO_BLACKFLY_DEVICE USB3)"/> <!-- USB3 or GigE-->
  <arg name="blackfly_encode" default="$(optenv DINGO_BLACKFLY_ENCODING BayerRG8)"/>
  <arg name="blackfly_frames" default="$(optenv DINGO_BLACKFLY_FRAMERATE 30)"/>

  <arg name="blackfly_secondary_enable" default="$(optenv DINGO_BLACKFLY_SECONDARY 0)"/>
  <arg name="blackfly_secondary_prefix" default="$(optenv DINGO_BLACKFLY_SECONDARY_PREFIX blackfly_secondary)"/>
  <arg name="blackfly_secondary_serial" default="$(optenv DINGO_BLACKFLY_SECONDARY_SERIAL 0)"/>
  <arg name="blackfly_secondary_device" default="$(optenv DINGO_BLACKFLY_SECONDARY_DEVICE USB3)"/> <!-- USB3 or GigE-->
  <arg name="blackfly_secondary_encode" default="$(optenv DINGO_BLACKFLY_SECONDARY_ENCODING BayerRG8)"/>
  <arg name="blackfly_secondary_frames" default="$(optenv DINGO_BLACKFLY_SECONDARY_FRAMERATE 30)"/>

  <group if="$(arg blackfly_enable)">
    <include file="$(find spinnaker_camera_driver)/launch/camera.launch">
      <arg name="camera_name"   value="$(arg blackfly_prefix)"/>
      <arg name="camera_serial" value="$(arg blackfly_serial)"/>
      <arg name="device_type"   value="$(arg blackfly_device)"/>
      <arg name="encoding"      value="$(arg blackfly_encode)"/>
      <arg name="frame_rate"    value="$(arg blackfly_frames)"/>
    </include>
  </group>

  <group if="$(arg blackfly_secondary_enable)">
    <include file="$(find spinnaker_camera_driver)/launch/camera.launch">
      <arg name="camera_name"   value="$(arg blackfly_secondary_prefix)"/>
      <arg name="camera_serial" value="$(arg blackfly_secondary_serial)"/>
      <arg name="device_type"   value="$(arg blackfly_secondary_device)"/>
      <arg name="encoding"      value="$(arg blackfly_secondary_encode)"/>
      <arg name="frame_rate"    value="$(arg blackfly_secondary_frames)"/>
    </include>
  </group>

  <!-- Microstrain IMU: GX3, GX5, GX25, etc. -->
  <group if="$(optenv DINGO_IMU_MICROSTRAIN 0)">
    <include file="$(find microstrain_inertial_driver)/launch/microstrain.launch">
      <arg name="namespace"              value="$(optenv DINGO_IMU_MICROSTRAIN_NAME microstrain)" />
      <arg name="node_name"              value="microstrain_inertial_driver" />
      <arg name="params_file"            value="$(find dingo_bringup)/config/microstrain.yaml" />
    </include>
  </group>

  <!-- Wibotic wireless charger -->
  <group if="$(optenv DINGO_WIBOTIC_CHARGER 0)">
    <include file="$(find wibotic_connector_can)/launch/wibotic_connector_can.launch">
      <param name="can_interface" value="$(optenv DINGO_WIBOTIC_CHARGER_CAN can0)" />
      <param name="uavcan_node_id"  value="$(optenv DINGO_WIBOTIC_CHARGER_ID 10)" />
    </include>
  </group>
</launch>
